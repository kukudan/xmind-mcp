import { Point } from './point';
export interface Size {
    height: number;
    width: number;
}
export interface Bounds extends Point, Size {
}
export declare function isBoundsEqual(bound1: Bounds, bound2: Bounds): boolean;
export declare function isBoundsIntersect(bounds1: Bounds, bounds2: Bounds): boolean;
export declare function isBoundsContainPoint(bound: Bounds, point: Point): boolean;
export declare function mergeBounds(bound1: Bounds, bound2: Bounds): Bounds;
export declare function mergeBoundsArr(boundsArr: Bounds[]): Bounds;
export declare function inflateBounds(bounds: Bounds, padding: number): Bounds;
export declare function moveBounds(bounds: Bounds, vector: Point): Bounds;
export declare function fromPoints(pointArr: Point[]): Bounds;
export declare function rotateBounds(bound: Bounds, degree: any, cx?: number, cy?: number): Bounds;
export declare function outBounds(bounds: Bounds, biggerBounds: Bounds): Bounds;
export declare function isSameSize(size1: Size, size2: Size): boolean;
