{"version":3,"file":"topic.abstract.js","sourceRoot":"","sources":["../../src/abstracts/topic.abstract.ts"],"names":[],"mappings":"","sourcesContent":["import { Topic } from '..';\nimport { SummaryOptions } from './summary.abstract';\nimport * as Model from '../common/model';\nimport * as Core from 'xmind-model';\n\nexport interface TopicOptions {\n  sheet: Core.Sheet;\n}\n\nexport interface MarkerOptions {\n  groupId: string;\n  markerId: string;\n  del?: boolean;\n}\n\nexport interface ImageOptions {\n  width?: string;\n  height?: string;\n}\n\nexport interface AbstractTopic {\n\n  /**\n   * @description Set topic as the parent node\n   * @param {String} [componentId] - The root topic will be used as the parent node if you don't given\n   * @return {Topic}\n   */\n  on(componentId?: string): Topic;\n\n  /**\n   * @description Add a topic on the parent node\n   * @param {Model.Topic} topic - The topic data model\n   * @param {Object} options\n   * @param {String} options.title - The title of topic\n   * @param {Number} [options.index] - The position where the element in map tree\n   * @return {Topic}\n   */\n  add(topic: Model.Topic, options?: {index: number}): Topic;\n\n\n  /**\n   * @description Add an image on the current topic\n   * @param {Object} options\n   * @param {String} [options.width] - Image width\n   * @param {String} [options.height] - image height\n   * @return {String} a file key that can be used for `Zipper.updateManifestMetadata` and `Dumper.updateManifestMetadata`\n   */\n  image(options?: ImageOptions): string;\n\n  /**\n   * @description Get topic by topicId\n   * @param {String} componentId\n   * @return {Core.Topic}\n   */\n  find(componentId: string): Core.Topic;\n\n\n  /**\n   * @description Attach a text note to topic\n   * @param {String} text - note body\n   * @param {Boolean} del - a boolean flag for text note deletion\n   * @return {Topic}\n   */\n  note(text: string, del?: boolean): Topic;\n\n  /**\n   * @description Destroy a component from map tree\n   * @param {String} componentId\n   * @return {Topic}\n   */\n  destroy(componentId: string): Topic;\n\n  /**\n   * @description Add info of summary to topic and range topics\n   * @param {SummaryOptions} [options]\n   * @param {String} options.title - The title of summary\n   * @param {String} options.edge - A topicId for the range of summary\n   * @return {Topic}\n   */\n  summary(options: SummaryOptions): Topic;\n\n  /**\n   * @description Add marker to topic\n   * @param {MarkerOptions} options - The groupId & markerId\n   * @param {String} options.groupId\n   * @param {String} options.markerId\n   * @param {Boolean} options.del - The marker object will be removed if del set as true\n   * @return {Topic}\n   */\n  marker(options: MarkerOptions): Topic;\n\n  /**\n   * @description Get the topicId that you have added.\n   * * In default, It's going to return the last topicId\n   * @param { String } title - Find out topicId by `Title`.\n   * @return { String | Null }\n   */\n  cid(title?: string): string | null;\n\n\n  /**\n   * @description Get an object that contains pairs of $topicId and $title\n   * @return { Record<string, string> }\n   */\n  cids(): Record<string, string>;\n}\n"]}