"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Marker = void 0;
const marker_abstract_1 = require("../abstracts/marker.abstract");
const marker_1 = require("../common/constants/marker");
const debug = require('debug')('xmind-sdk:marker');
Object.defineProperty(marker_1.icons, 'iterable', {
    value: marker_1.iterable,
    enumerable: false,
    configurable: false,
    writable: false
});
class Marker extends marker_abstract_1.AbstractMarker {
    constructor() {
        super();
        this.init();
    }
    init() {
        for (const property in marker_1.icons) {
            this[property] = function (name) {
                if (!name) {
                    return null;
                }
                const normalized = (typeof name === 'string') ? name : String(name);
                if (name && !marker_1.icons[property].hasOwnProperty(normalized)) {
                    debug('W - Invalid name string %s', name);
                    return null;
                }
                return marker_1.icons[property][normalized];
            };
        }
    }
    /**
     * @description Get names by group name
     * @param {String} groupName
     * @return {Array<string>}
     * @static
     */
    static names(groupName) {
        return marker_1.icons['iterable'][String(groupName)];
    }
    /**
     * @description Get group names
     * @return {Array<string>}
     * @static
     */
    static groups() {
        return Object.keys(marker_1.icons['iterable']);
    }
}
exports.Marker = Marker;
//# sourceMappingURL=marker.js.map