{"version":3,"file":"model.js","sourceRoot":"","sources":["../../src/common/model.ts"],"names":[],"mappings":";;;AA0BA,IAAY,UAGX;AAHD,WAAY,UAAU;IACpB,+BAAiB,CAAA;IACjB,iCAAmB,CAAA;AACrB,CAAC,EAHW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAGrB","sourcesContent":["/* Basic type alias */\ntype Extension = ExtensionTextNode | ExtensionChildNode;\ntype ItemInformation = Array<{type: string, mode: string}>;\ntype TabColor = Array<{rgb: string}>;\ntype Markers = {'<ID>': {name: string, resource: string}};\ntype Angle = {angle: number, amount: number};\ntype None = 'none';\ntype Plain = { content: string };\ntype NoteSpan = TextSpan | ImageSpan | HyperlinkSpan;\n\n// @ts-ignore\ntype Model =\n  Sheet |\n  SheetSetting |\n  Relationship |\n  Legend |\n  Theme |\n  Style |\n  Topic |\n  Image |\n  Numbering |\n  Notes |\n  Extension;\n\nexport type Whatever = Model;\n\nexport enum VISIBILITY {\n  HIDDEN = 'hidden',\n  VISIBLE = 'visible'\n}\n\nexport interface TextSpan {\n  'style': Style;\n  'text': string;\n  'class': string;\n}\n\nexport interface ImageSpan {\n  'style': Style;\n  'class': string;\n  'image': string;\n}\n\nexport interface HyperlinkSpan {\n  'style': Style;\n  'class': string;\n  'href': string;\n  'spans': Array<NoteSpan>;\n}\n\nexport interface HTML {\n  content: {\n    paragraphs: Array<{\n      style: Style;\n      spans: Array<NoteSpan>;\n    }>\n  }\n}\n\nexport interface ControlPoints {\n  '0': Axis;\n  '1': Angle;\n}\n\nexport interface Axis {\n  x: number;\n  y: number;\n}\n\n/* The end of type alias */\n\n\n/* Model definitions */\n/* Sheet model */\nexport interface Sheet {\n  'id': string;\n  'title': string;\n  'rootTopic': Topic;\n  'style': Style;\n  'topicPositioning': string;\n  'topicOverlapping': string;\n  'theme': Theme;\n  'relationships': Array<Relationship>;\n  'legend': Legend;\n  'settings': SheetSetting;\n}\n\n\n/* Sheet settings model */\nexport interface SheetSetting {\n  'infoItems/infoItem': ItemInformation;\n  'tab-color': TabColor;\n}\n\n/* Theme model */\nexport interface Theme {\n  'id': string;\n  'title': string;\n  'map'?: Style;\n  'centralTopic'?: Style;\n  'mainTopic'?: Style;\n  'subTopic'?: Style;\n  'floatingTopic'?: Style;\n  'centralFloatingTopic'?: Style;\n  'boundary'?: Style;\n  'relationship'?: Style;\n  'summaryTopic'?: Style;\n  'summary'?: Style;\n}\n\n/**\n * Legend model\n */\nexport interface Legend {\n  'visibility': VISIBILITY.HIDDEN | VISIBILITY.VISIBLE;\n  'position': Axis;\n  'markers': Markers;\n  'groups': Markers;\n}\n\nexport interface Topic {\n  id?: string;\n  title: string;\n  style?: Style;\n  class?: string;\n  position?: Axis;\n  structureClass?: string;\n  branch?: string;\n  width?: number;\n  labels?: string;\n  numbering?: Numbering,\n  href?: string;\n  notes?: Notes,\n  image?: Image,\n  children?: { [index: string]: Array<Topic> };\n  markers?: Array<Marker>;\n  boundaries?: Array<Boundary>;\n  summaries?: Array<Summary>;\n  extensions?: Array<Extension>;\n}\n\n/**\n * Marker model\n */\nexport interface Marker {\n  markerId: string;\n  groupId: string;\n}\n\n/**\n * Boundary model\n */\nexport interface Boundary {\n  id: string;\n  title: string;\n  style: Style;\n  class: string;\n  range: string;\n}\n\n\n/**\n * Summary model\n */\nexport interface Summary {\n  id: string;\n  style: Style;\n  class: string;\n  range: string;\n  topicId: string;\n}\n\n/**\n * Relationship model\n */\nexport interface Relationship {\n  'id': string;\n  'title': string;\n  'style': Style;\n  'class': string;\n  'end1Id': string;\n  'end2Id': string;\n  'controlPoints': ControlPoints;\n}\n\n/* Text extension model */\nexport interface ExtensionTextNode {\n  provider: string;\n  content: string;\n}\n\n/* Child extension model */\nexport interface ExtensionChildNode {\n  provider: string;\n  content: Array<object>;\n  resourceRefs: Array<string>;\n}\n\n/**\n * Style model\n */\nexport interface Style {\n  'id': string;\n  'type': string;\n  'properties': Object;\n}\n\n/**\n * Image model\n */\nexport interface Image {\n  src: string;\n  width: number;\n  height: number;\n  align: string;\n}\n\n/**\n * Numbering model\n */\nexport interface Numbering {\n  numberFormat: string;\n  prefix: string;\n  suffix: string;\n  prependingNumbers: None | undefined;\n}\n\n/**\n * Notes model\n */\nexport interface Notes {\n  plain: Plain;\n  html: HTML;\n}\n"]}